

# TrendFollowing_FisherTransform.py

from QuantConnect.Data.Market import TradeBar
from QuantConnect.Indicators import FisherTransform, ExponentialMovingAverage, AverageTrueRange
from QuantConnect.Algorithm import QCAlgorithm
from QuantConnect.Orders import OrderStatus

class TrendFollowing(QCAlgorithm):

    def Initialize(self):
        self.SetStartDate(2010, 1, 1)  
        self.SetEndDate(2020, 12, 31) 
        self.SetCash(100000)  
        self.AddEquity("SPY", Resolution.Daily)
        
        # Fisher Transform indicator
        self.fish = FisherTransform("fish", 10)
        self.AddIndicator(self.fish, self.Symbol)
        
        # Exponential Moving Average indicator
        self.ema = ExponentialMovingAverage(50)
        self.AddIndicator(self.ema, Resolution.Daily)

        # Average True Range indicator with a period of 14 days
        self.atr = AverageTrueRange("ATR", 14)
        self.AddIndicator(self.atr)

    def OnData(self, data):
        
        # Wait for both indicators to be ready
        if not (self.fish.IsReady and self.ema.IsReady and self.atr.IsReady):
            return
        
        # Sell if price drops below the trailing stop loss
        if self.Portfolio[self.Symbol].UnrealizedProfitPercent < -0.015:
            for holding in self.Portfolio[self.Symbol].Holdings:
                if holding.Value.HoldingsValue > 0:
                    stopPrice = holding.Value.AveragePrice * (1 - 0.015)
                    orderId = self.LimitOrder(self.Symbol, -holding.Value.Quantity, stopPrice).OrderId
                    
                    # Cancel order if it is filled before the end of the day
                    if orderId is not None:
                        order = self.Transactions.GetOrderById(orderId)
                        if order.Status == OrderStatus.Filled and order.Type == OrderType.Limit:
                            self.Transactions.CancelOpenOrders(order.Symbol)

                    return
                    
                    
                
        
        holdings = float(self.Portfolio[self.Symbol].Quantity)
        
         # Buy signal line crosses above fisher transform line
         # and fisher transform is below zero and price is above EMA line
         
         # Sell signal line crosses below fisher transform line 
         # or fisher transform is above zero or price drops below EMA line
        
         
         
         
         
         sellSignal = (self.fish.Current.Value > 0) or (self.Price.Current.Value < ema.Current.Value) or (self.fish.Signal.IsReady and (self.fish.Signal.Current.Value < -self.fish.Current.Value))
            sellSignal2 =(self.Portfolio[self.Symbol].UnrealizedProfitPercent > 0.03) and (holding >0 )
            sellSignal3= holdings>0 and ((holding*data[self.Symbol].Close) - float(self.Portfolio[self.Symbol].TotalUnrealizedProfit))<-50
            
           
                
            
            if sellSignal2 or sellSignal3 or sellSignal: 
                quantity=-holdings
                
                limitPrice=data[self.Symbol].Close*0.98
                
                orderId=self.LimitOrder(self.Symbol,-quantity,limitPrice).OrderId
                
                if orderId is not None: 
                    order=self.Transactions.GetOrderById(orderId)
                    
                    if order.Status==OrderStatus.Filled and order.Type==OrderType.Limit: 
                        cancel=self.Transactions.CancelOpenOrders(order.Symbol)

                    
    
        
        
        
        
        
        
        
                
                    
            
                        
                    
                    
                        
                

        
            
        

        

        
        

        
        
        
        
        

        
        
        
        
        
        
        
                
    
            
            
            
            
            
            
            
            
            
            
            
            


        
    
        
        
        
        
        
                
        
        
        
                
                
                

                
                
                    
                    
                    
                    
                    
                    
                    


                    


                    


                    


                    


                    





        




            





    



    
            



    



    
            



    




    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    

    









    

    
    
    
    

    
    


    
    
    
    


    
    
    
    
    
    

    
    
    
    
    
    






        
    
    



    
    
    


    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    
    









        
    
                
                
                
                
                
                
                
                
                
                
                













                

                





























            

             

             
            
             
            
             
            
             
            
             
            
             
            
             

             

            

             
              
        
            
        
        
        
      
        
            



























































































            
            
            
            
            
            
            
            
            
            





            

            

            

            

            

            

            










        

    

    

        

        

        

        
        
        
      

          




































































































     

         






























    

         






























    
 

         
        
         
    
      

























 

         
        
         
    
      











        
    
    












     
     
     

     
    
    
    
    
 
    
 
    
 
    
 
    
 
    
 
    
 
    
 

     
    
    
    
    
        
    
      
     
    
    
    
    
    
    
    
    
    
    
    
    

       
     
     
     
    
      
      
      
      
      
      





   

   
   
   
   
   
   
   
   
   
    
   

   
    
   
    
   
    
  
    
    


    
  
    
   

  
    
   

  

  


























































































  



























  

















  













  